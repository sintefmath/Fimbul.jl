import{_ as r,C as o,c as p,o as d,j as i,a,aA as l,G as t,w as n}from"./chunks/framework.Sn1b_dQf.js";const A=JSON.parse('{"title":"Setup functions","description":"","frontmatter":{},"headers":[],"relativePath":"man/cases/cases.md","filePath":"man/cases/cases.md","lastUpdated":null}'),c={name:"man/cases/cases.md"},h={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""};function f(F,e,C,j,v,w){const s=o("Badge");return d(),p("div",null,[e[36]||(e[36]=i("h1",{id:"Setup-functions",tabindex:"-1"},[a("Setup functions "),i("a",{class:"header-anchor",href:"#Setup-functions","aria-label":'Permalink to "Setup functions {#Setup-functions}"'},"​")],-1)),e[37]||(e[37]=i("h2",{id:"Cases-with-analytical-solutions",tabindex:"-1"},[a("Cases with analytical solutions "),i("a",{class:"header-anchor",href:"#Cases-with-analytical-solutions","aria-label":'Permalink to "Cases with analytical solutions {#Cases-with-analytical-solutions}"'},"​")],-1)),i("details",h,[i("summary",null,[e[0]||(e[0]=i("a",{id:"Fimbul.analytical_1d",href:"#Fimbul.analytical_1d"},[i("span",{class:"jlbinding"},"Fimbul.analytical_1d")],-1)),e[1]||(e[1]=a()),t(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[3]||(e[3]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">analytical_1d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keyword arguments</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Setup function for conductive heat transfer in 1D, with analytical solution</p><p><strong>Keyword arguments</strong></p><ul><li><p><code>L = 100.0</code>: Length of the domain (m)</p></li><li><p><code>thermal_conductivity = 2.0</code>: Thermal conductivity of the rock (W/(m K))</p></li><li><p><code>heat_capacity = 900.0</code>: Heat capacity of the rock (J/(kg K))</p></li><li><p><code>density = 2600</code>: Density of the rock (kg/m^3)</p></li><li><p><code>temperature_boundary = 283.15</code>: Temperature at the boundary (K)</p></li><li><p><code>initial_condition = missing</code>: Initial temperature profile. Set to sine curve if not provided</p></li><li><p><code>num_cells = 100</code>: Number of cells in the mesh</p></li><li><p><code>num_steps = 100</code>: Number of time steps</p></li></ul>',4)),t(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[2]||(e[2]=[i("a",{href:"https://github.com/sintefmath/Fimbul.jl/blob/35330a18f5764c99e59df782e61056a3162e90bc/src/cases/analytical.jl#L1-L16",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e[38]||(e[38]=i("h2",{id:"Generic-cases",tabindex:"-1"},[a("Generic cases "),i("a",{class:"header-anchor",href:"#Generic-cases","aria-label":'Permalink to "Generic cases {#Generic-cases}"'},"​")],-1)),i("details",u,[i("summary",null,[e[4]||(e[4]=i("a",{id:"Fimbul.egg_geothermal",href:"#Fimbul.egg_geothermal"},[i("span",{class:"jlbinding"},"Fimbul.egg_geothermal")],-1)),e[5]||(e[5]=a()),t(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[7]||(e[7]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">egg_geothermal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keyword arguments</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Keyword arguments</strong></p><ul><li><p><code>include_wells = true</code>: Include wells in the model.</p></li><li><p><code>wells_distance_ij = 20</code>: Distance (in cell numbers) between the wells in i and j directions.</p></li><li><p><code>simple_well = false</code>: Use simple well model instead of the full well model.</p></li><li><p><code>geothermal_gradient = 0.03si_unit(:Kelvin)/si_unit(:meter)</code>: Geothermal gradient in the reservoir.</p></li><li><p><code>pressure_top = 50si_unit(:bar)</code>: Pressure at the top of the reservoir.</p></li><li><p><code>temperature_top = convert_to_si(50, :Celsius)</code>: Temperature at the top of the reservoir.</p></li><li><p><code>use_bc = true</code>: Use fixed Dirichlet pressure and temperature boundary conditions at the reservoir sides.</p></li></ul>',3)),t(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[6]||(e[6]=[i("a",{href:"https://github.com/sintefmath/Fimbul.jl/blob/35330a18f5764c99e59df782e61056a3162e90bc/src/cases/egg_geothermal.jl#L1-L18",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e[39]||(e[39]=i("h2",{id:"Geothermal-energy-production",tabindex:"-1"},[a("Geothermal energy production "),i("a",{class:"header-anchor",href:"#Geothermal-energy-production","aria-label":'Permalink to "Geothermal energy production {#Geothermal-energy-production}"'},"​")],-1)),i("details",g,[i("summary",null,[e[8]||(e[8]=i("a",{id:"Fimbul.geothermal_doublet",href:"#Fimbul.geothermal_doublet"},[i("span",{class:"jlbinding"},"Fimbul.geothermal_doublet")],-1)),e[9]||(e[9]=a()),t(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[11]||(e[11]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">geothermal_doublet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keyword arguments</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generic setup function for geothermal doublet case</p><p><strong>Keyword arguments</strong></p><ul><li><p><code>depths = [0.0, 500.0, 2400.0, 2500.0, 3000.0]</code>: Depths delineating geological layers.</p></li><li><p><code>permeability = [1e-3, 5e-2, 1.0, 1e-3]*darcy</code>: Permeability of the layers.</p></li><li><p><code>porosity = [0.01, 0.2, 0.35, 0.01]</code>: Porosity of the layers.</p></li><li><p><code>density = [2000, 2580, 2600, 2400]*kilogram/meter^3</code>: Rock density in the layers.</p></li><li><p><code>thermal_conductivity = [2.0, 2.8, 3.5, 1.9]*watt/meter/Kelvin</code>: Thermal conductivity in the layers.</p></li><li><p><code>heat_capacity = [1500, 900, 900, 1500]*joule/kilogram/Kelvin</code>: Heat capacity in the layers.</p></li><li><p><code>aquifer_layer = 3</code>: Index of the aquifer layer.</p></li><li><p><code>spacing_top = 100.0</code>: Horizontal well spacing at the surface</p></li><li><p><code>spacing_bottom = 1000.0</code>: Horizontal well spacing in the aquifer</p></li><li><p><code>depth_1 = 800.0</code>: Depth at which well starts to deviate.</p></li><li><p><code>depth_2 = 2500.0</code>: Depth of wells</p></li><li><p><code>temperature_inj = convert_to_si(20.0, :Celsius)</code>: Injection temperature.</p></li><li><p><code>rate = 300meter^3/hour</code>: Injection and production rate.</p></li><li><p><code>temperature_surface = convert_to_si(10.0, :Celsius)</code>: Temperature at the surface.</p></li><li><p><code>num_years = 200</code>: Number of years to run the simulation.</p></li><li><p><code>report_interval = si_unit(:year)</code>: Reporting interval for the simulation.</p></li></ul>',4)),t(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[10]||(e[10]=[i("a",{href:"https://github.com/sintefmath/Fimbul.jl/blob/35330a18f5764c99e59df782e61056a3162e90bc/src/cases/doublet.jl#L1-L25",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",k,[i("summary",null,[e[12]||(e[12]=i("a",{id:"Fimbul.egs",href:"#Fimbul.egs"},[i("span",{class:"jlbinding"},"Fimbul.egs")],-1)),e[13]||(e[13]=a()),t(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[15]||(e[15]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">egs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(well_coords, fracture_radius, fracture_spacing; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Arguments</strong></p><ul><li><p><code>well_coords</code>: Array of well coordinates. Each well is defined by an 3x3 matrix of (x,y,z) coordinates interpreted as top/heel/toe. The current implementation assumes that the laterals from heel to toe are perfectly horizontal. The first well is the injector, and subsequent trajectories define the producer legs.</p></li><li><p><code>fracture_radius</code>: Radius of EGS fractures, centered at the mean of all well laterals, as see in the y/z plane</p></li><li><p><code>fracture_spacing</code>: Spacing between the fractures along the well laterals</p></li></ul><p><strong>Keyword arguments</strong></p><ul><li><p><code>well_names</code>: Names of the wells. Defaults to :Injector and :Producer</p></li><li><p><code>fracture_aperture</code>: Aperture of fractures [mm]</p></li><li><p><code>poros</code></p></li></ul>',5)),t(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[14]||(e[14]=[i("a",{href:"https://github.com/sintefmath/Fimbul.jl/blob/35330a18f5764c99e59df782e61056a3162e90bc/src/cases/egs.jl#L1-L19",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",m,[i("summary",null,[e[16]||(e[16]=i("a",{id:"Fimbul.ags",href:"#Fimbul.ags"},[i("span",{class:"jlbinding"},"Fimbul.ags")],-1)),e[17]||(e[17]=a()),t(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[19]||(e[19]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ags</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create an Advanced Geothermal System (AGS) simulation case.</p><p><strong>Keyword Arguments</strong></p><p><strong>Well trajectory parameters</strong></p><ul><li><p><code>well_coords</code>: A vector of matrices specifying the (x,y,z) coordinates of each well section. Default is the AGS well trajectory given by <code>get_ags_trajectory()</code>.</p></li><li><p><code>well_connectivity</code>: A matrix specifying the connectivity between well sections. Each row corresponds to a well section, with the first column indicating the index of the section from which it receives flow (0 if none), and the second column indicating the index of the section to which it sends flow (0 if none). Default is the connectivity for the AGS well trajectory given by <code>get_ags_trajectory()</code>. Note that each connection should only be specified once.</p></li></ul><p><strong>Geological parameters</strong></p><ul><li><p><code>depths</code>: Vector of depths defining layer boundaries [m]</p></li><li><p><code>porosity</code>: Porosity as scalar or one value for each layer [-]</p></li><li><p><code>permeability</code>: Permeability as scalar or one value for each layer [m²]</p></li><li><p><code>rock_thermal_conductivity</code>: Thermal conductivity as scalar or one value for each layer [W/(m·K)]</p></li><li><p><code>rock_heat_capacity</code>: Rock heat capacity as scalar or one value for each layer [J/(kg·K)]</p></li></ul><p><strong>Thermal Parameters</strong></p><ul><li><p><code>temperature_surface = 10°C</code>: Surface temperature [K]</p></li><li><p><code>thermal_gradient = 0.03</code>: Geothermal gradient [K/m]</p></li></ul><p><strong>Operational Parameters</strong></p><ul><li><p><code>rate = 25 m³/h</code>: Injection/production rate [m³/s]</p></li><li><p><code>temperature_inj = 25°C</code>: Injection temperature [K]</p></li><li><p><code>num_years = 50</code>: Total simulation time [years]</p></li><li><p><code>report_interval = year/4</code>: Reporting interval [s]</p></li><li><p><code>schedule_args</code>: Additional arguments passed to make_schedule</p></li></ul><p><strong>Mesh Parameters</strong></p><ul><li><p><code>hz</code>: Vector of vertical cell sizes for each layer [m]. If <code>missing</code>, a default sizing is used.</p></li><li><p><code>hxy_min = 25.0</code>: Minimum horizontal cell size [m]</p></li><li><p><code>hxy_max = 250.0</code>: Maximum horizontal cell size [m]</p></li><li><p><code>mesh_args</code>: Additional arguments passed to Fimbul.extruded_mesh</p></li></ul><p><strong>Returns</strong></p><p>A <code>JutulCase</code> for AGS ```</p>',15)),t(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[18]||(e[18]=[i("a",{href:"https://github.com/sintefmath/Fimbul.jl/blob/35330a18f5764c99e59df782e61056a3162e90bc/src/cases/ags.jl#L1-L47",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",y,[i("summary",null,[e[20]||(e[20]=i("a",{id:"Fimbul.egg_geothermal_doublet",href:"#Fimbul.egg_geothermal_doublet"},[i("span",{class:"jlbinding"},"Fimbul.egg_geothermal_doublet")],-1)),e[21]||(e[21]=a()),t(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[23]||(e[23]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">egg_geothermal_doublet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keyword arguments</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Keyword arguments</strong></p><ul><li><p><code>rate_injection = 10si_unit(:litre)/si_unit(:second)</code>: Injection rate.</p></li><li><p><code>rate_production = rate_injection</code>: Production rate.</p></li><li><p><code>temperature_injection = convert_to_si(10.0, :Celsius)</code>: Injection temperature.</p></li><li><p><code>rate_observation = missing</code>: Observation well rate. Set to min(rate_injection, rate_production)/1000 if missing.</p></li><li><p><code>bhp = 45*si_unit(:bar)</code>: Bottom hole pressure of supporting well if BCs are not given (default - set use_bc = true to force BCs).</p></li><li><p><code>report_interval = si_unit(:year)/4</code>: Report interval for simulation results.</p></li><li><p><code>production_time = 25.0si_unit(:year)</code>: Production time.</p></li><li><p><code>well_distance_ij = 30</code>: Distance between the wells in i and j directions.</p></li><li><p>All other keyword arguments are passed to <code>egg_geothermal</code>.</p></li></ul>',3)),t(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[22]||(e[22]=[i("a",{href:"https://github.com/sintefmath/Fimbul.jl/blob/35330a18f5764c99e59df782e61056a3162e90bc/src/cases/egg_geothermal.jl#L97-L113",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e[40]||(e[40]=i("h2",{id:"Underground-thermal-energy-storage",tabindex:"-1"},[a("Underground thermal energy storage "),i("a",{class:"header-anchor",href:"#Underground-thermal-energy-storage","aria-label":'Permalink to "Underground thermal energy storage {#Underground-thermal-energy-storage}"'},"​")],-1)),i("details",E,[i("summary",null,[e[24]||(e[24]=i("a",{id:"Fimbul.ates",href:"#Fimbul.ates"},[i("span",{class:"jlbinding"},"Fimbul.ates")],-1)),e[25]||(e[25]=a()),t(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[27]||(e[27]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ates</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keyword arguments</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create an Aquifer Thermal Energy Storage (ATES) simulation case.</p><p><strong>Keyword Arguments</strong></p><p><strong>Geometry Parameters</strong></p><ul><li><p><code>well_distance = missing</code>: Distance between hot and cold wells [m]. If missing, calculated as 2×thermal_radius</p></li><li><p><code>depths = [0.0, 850.0, 900.0, 1000.0, 1050.0, 1300.0]</code>: Layer interface depths [m]</p></li><li><p><code>aquifer_layer = 3</code>: Index of the aquifer layer for thermal storage</p></li><li><p><code>use_2d = false</code>: If true, creates a 2D model</p></li></ul><p><strong>Rock Properties (per layer)</strong></p><ul><li><p><code>porosity = [0.01, 0.05, 0.35, 0.05, 0.01]</code>: Porosity for each layer [-]</p></li><li><p><code>permeability</code>: Permeability for each layer [m²]</p></li><li><p><code>rock_thermal_conductivity</code>: Thermal conductivity [W/(m·K)]</p></li><li><p><code>rock_heat_capacity</code>: Rock heat capacity [J/(kg·K)]</p></li></ul><p><strong>Thermal Parameters</strong></p><ul><li><p><code>temperature_surface = 10°C</code>: Surface temperature [K]</p></li><li><p><code>thermal_gradient = 0.03</code>: Geothermal gradient [K/m]</p></li></ul><p><strong>Operational Parameters</strong></p><ul><li><p><code>temperature_charge = 95°C</code>: Temperature of injected water during charging [K]</p></li><li><p><code>temperature_discharge = 25°C</code>: Temperature of injected water during discharging [K]</p></li><li><p><code>rate_charge = missing</code>: Injection/production rate during charging [m³/s]. If missing, calculated based on a target thermal_radius = well_distance/2 or, if well_distance missing, 250 m</p></li><li><p><code>rate_discharge = rate_charge</code>: Rate during discharging [m³/s]</p></li><li><p><code>balanced_injection = true</code>: If true, the injection well target will be set equal to the production rate</p></li></ul><p><strong>Advanced Options</strong></p><ul><li><p><code>utes_schedule_args = NamedTuple()</code>: Additional arguments passed to make_utes_schedule</p></li><li><p><code>mesh_args = NamedTuple()</code>: Additional arguments passed to make_ates_cart_mesh</p></li></ul><p><strong>Returns</strong></p><p>A <code>JutulCase</code> for ATES</p>',15)),t(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[26]||(e[26]=[i("a",{href:"https://github.com/sintefmath/Fimbul.jl/blob/35330a18f5764c99e59df782e61056a3162e90bc/src/cases/ates.jl#L1-L42",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",_,[i("summary",null,[e[28]||(e[28]=i("a",{id:"Fimbul.btes",href:"#Fimbul.btes"},[i("span",{class:"jlbinding"},"Fimbul.btes")],-1)),e[29]||(e[29]=a()),t(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[31]||(e[31]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">btes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keyword arguments</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Setup function for borehole thermal energy storage (BTES) system.</p><p><strong>Keyword arguments</strong></p><ul><li><p><code>num_wells = 48</code>: Number of wells in the BTES system.</p></li><li><p><code>num_sections = 6</code>: Number of sections in the BTES system. The system is divided into equal circle sectors, and all wells in each sector are coupled in series.</p></li><li><p><code>well_spacing = 5.0</code>: Horizontal spacing between wells [m].</p></li><li><p><code>depths = [0.0, 0.5, 50, 65]</code>: Depths delineating geological layers [m].</p></li><li><p><code>well_layers = [1, 2]</code>: Layers in which the wells are placed</p></li><li><p>`density = [30, 2580, 2580]: Rock density in the layers [kg/m³].</p></li><li><p>`thermal_conductivity = [0.034, 3.7, 3.7]: Thermal conductivity in the layers [W/(m⋅K)].</p></li><li><p><code>heat_capacity = [1500, 900, 900]</code>: Heat capacity in the layers [J/(kg⋅K)].</p></li><li><p><code>geothermal_gradient = 0.03 K/m</code>: Geothermal gradient [K/m].</p></li><li><p><code>temperature_charge = 90 °C/363.15 K</code>: Injection temperature during charging [K].</p></li><li><p><code>temperature_discharge = 10 °C/283.15 K</code>: Injection temperature during discharging [K].</p></li><li><p><code>rate_charge = 0.5 l/s</code>: Injection rate during charging [m³/s].</p></li><li><p><code>rate_discharge = rate_charge</code>: Injection rate during discharging [m³/s].</p></li><li><p><code>temperature_surface = 10 °C/283.15 K</code>: Temperature at the surface [K].</p></li><li><p><code>num_years = 5</code>: Number of years to run the simulation.</p></li><li><p><code>charge_period = [&quot;June&quot;, &quot;September&quot;]</code>: Period during which the system is charged.</p></li><li><p><code>discharge_period = [&quot;December&quot;, &quot;March&quot;]</code>: Period during which the system is discharged.</p></li><li><p><code>report_interval = 14 day</code>: Reporting interval for the simulation.</p></li><li><p><code>utes_schedule_args = NamedTuple()</code>: Additional arguments for the UTES schedule.</p></li><li><p><code>n_z = [3, 8, 3]</code>: Number of layers in the vertical direction for each layer.</p></li><li><p><code>n_xy = 3</code>: Number of layers in the horizontal direction for each layer.</p></li><li><p><code>mesh_args = NamedTuple()</code>: Additional arguments for the mesh generation.</p></li></ul>',4)),t(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[30]||(e[30]=[i("a",{href:"https://github.com/sintefmath/Fimbul.jl/blob/35330a18f5764c99e59df782e61056a3162e90bc/src/cases/btes.jl#L1-L30",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",b,[i("summary",null,[e[32]||(e[32]=i("a",{id:"Fimbul.egg_ates",href:"#Fimbul.egg_ates"},[i("span",{class:"jlbinding"},"Fimbul.egg_ates")],-1)),e[33]||(e[33]=a()),t(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[35]||(e[35]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">egg_ates</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">temperature_charge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> convert_to_si</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:Celsius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">temperature_discharge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> convert_to_si</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:Celsius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rate_charge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25si_unit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:litre</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">si_unit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:second</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rate_discharge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rate_charge,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rate_observation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bhp_charge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25.0si_unit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:bar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bhp_discharge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 45.0si_unit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:bar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">charge_months </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;June&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;July&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;August&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;September&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">discharge_months </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;December&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;January&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;February&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;March&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">report_interval </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> si_unit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:year</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">num_years </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Keyword arguments</strong></p><ul><li><p><code>temperature_charge = convert_to_si(90.0, :Celsius)</code>: Charge temperature.</p></li><li><p><code>temperature_discharge = convert_to_si(10.0, :Celsius)</code>: Discharge temperature.</p></li><li><p><code>rate_charge = 25si_unit(:litre)/si_unit(:second)</code>: Charge rate.</p></li><li><p><code>rate_discharge = rate_charge</code>: Discharge rate.</p></li><li><p><code>rate_observation = missing</code>: Observation well rate. Set to min(rate_charge, rate_discharge)/1000 if missing.</p></li><li><p><code>bhp_charge = 25.0si_unit(:bar)</code>: Bottom hole pressure of supporting well during charge if BCs are not given (not default - set use_bc = false to force no BCs).</p></li><li><p><code>bhp_discharge = 45.0si_unit(:bar)</code>: Bottom hole pressure of supporting well during discharge if BCs are not given (not default - set use_bc = false to force no BCs).</p></li><li><p><code>charge_period = [&quot;June&quot;, &quot;September&quot;]</code>: Charge period.</p></li><li><p><code>discharge_period = [&quot;December&quot;, &quot;March&quot;]</code>: Discharge period.</p></li><li><p><code>num_years = 5</code>: Number of years to simulate.</p></li><li><p><code>report_interval = si_unit(:year)/12</code>: Report interval for simulation results.</p></li><li><p><code>utes_schedule_args = NamedTuple()</code>: Additional arguments passed to <code>make_utes_schedule()</code>.</p></li><li><p>All other keyword arguments are passed to <code>egg_geothermal</code>.</p></li></ul>`,3)),t(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...e[34]||(e[34]=[i("a",{href:"https://github.com/sintefmath/Fimbul.jl/blob/35330a18f5764c99e59df782e61056a3162e90bc/src/cases/egg_geothermal.jl#L175-L212",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const S=r(c,[["render",f]]);export{A as __pageData,S as default};
