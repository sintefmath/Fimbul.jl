import{_ as n,C as r,c as l,o,j as i,a,aA as p,G as t,w as h}from"./chunks/framework.UmJHmbPe.js";const f=JSON.parse('{"title":"Utilities","description":"","frontmatter":{},"headers":[],"relativePath":"man/cases/utils.md","filePath":"man/cases/utils.md","lastUpdated":null}'),d={name:"man/cases/utils.md"},c={class:"jldocstring custom-block",open:""};function g(k,s,u,E,m,y){const e=r("Badge");return o(),l("div",null,[s[4]||(s[4]=i("h1",{id:"Utilities",tabindex:"-1"},[a("Utilities "),i("a",{class:"header-anchor",href:"#Utilities","aria-label":'Permalink to "Utilities {#Utilities}"'},"â€‹")],-1)),i("details",c,[i("summary",null,[s[0]||(s[0]=i("a",{id:"Fimbul.make_utes_schedule",href:"#Fimbul.make_utes_schedule"},[i("span",{class:"jlbinding"},"Fimbul.make_utes_schedule")],-1)),s[1]||(s[1]=a()),t(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[3]||(s[3]=p(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">make_utes_schedule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(forces_charge, forces_discharge, forces_rest; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a specialized schedule for Underground Thermal Energy Storage (UTES) systems including ATES (Aquifer Thermal Energy Storage) and BTES (Borehole Thermal Energy Storage).</p><p>This function generates a three-phase operational schedule typical for thermal energy storage:</p><ol><li><p><strong>Charging phase</strong>: Inject hot water to store thermal energy</p></li><li><p><strong>Rest phase</strong>: No well activity</p></li><li><p><strong>Discharging phase</strong>: Extract stored thermal energy for heating applications</p></li></ol><p>The schedule automatically handles seasonal operations with user-defined charge and discharge periods, typically aligned with energy availability (summer charging) and demand (winter discharging).</p><p><strong>Arguments</strong></p><ul><li><p><code>forces_charge</code>: Forcing conditions during charging phase (hot water injection)</p></li><li><p><code>forces_discharge</code>: Forcing conditions during discharging phase (thermal energy extraction)</p></li><li><p><code>forces_rest</code>: Forcing conditions during rest periods (no activity well activity)</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>charge_period::Vector{String}=[&quot;June&quot;, &quot;September&quot;]</code>: Start and end months for charging. Can be month names (strings) or month numbers.</p></li><li><p><code>discharge_period::Vector{String}=[&quot;December&quot;, &quot;March&quot;]</code>: Start and end months for discharging.</p></li><li><p><code>start_year::Union{Int,Missing}=missing</code>: Starting year for simulation. Defaults to current year.</p></li><li><p><code>num_years::Int=5</code>: Number of operational years to simulate.</p></li><li><p><code>kwargs...</code>: Additional arguments passed to <code>make_schedule()</code> (e.g., <code>report_interval</code>).</p></li></ul><p><strong>Returns</strong></p><ul><li><p><code>dt</code>: Vector of time step sizes in seconds</p></li><li><p><code>forces</code>: Vector of forcing conditions for each time step</p></li><li><p><code>timestamps</code>: Vector of DateTime objects for temporal tracking</p></li></ul><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Standard ATES schedule: charge Jun-Sep, discharge Dec-Mar</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dt, forces, times </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> make_utes_schedule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    charge_forces, discharge_forces, rest_forces;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    charge_period </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;June&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;September&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    discharge_period </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;December&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;March&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    num_years </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    report_interval </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">day</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Notes</strong></p><ul><li><p>Rest periods are automatically inserted between charge and discharge phases</p></li><li><p>The function handles year transitions and ensures chronological ordering</p></li><li><p>Periods with zero duration are automatically filtered out</p></li></ul>`,15)),t(e,{type:"info",class:"source-link",text:"source"},{default:h(()=>[...s[2]||(s[2]=[i("a",{href:"https://github.com/sintefmath/Fimbul.jl/blob/ae880610abe7d585567064dc9cca82c7f87d21bd/src/cases/utils.jl#L87-L140",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const b=n(d,[["render",g]]);export{f as __pageData,b as default};
