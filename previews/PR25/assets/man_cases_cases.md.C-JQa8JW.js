import{_ as r,C as o,c as p,o as d,j as e,a,aA as l,G as t,w as n}from"./chunks/framework.UmJHmbPe.js";const j=JSON.parse('{"title":"Setup functions","description":"","frontmatter":{},"headers":[],"relativePath":"man/cases/cases.md","filePath":"man/cases/cases.md","lastUpdated":null}'),h={name:"man/cases/cases.md"},c={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""};function m(_,i,b,F,f,C){const s=o("Badge");return d(),p("div",null,[i[24]||(i[24]=e("h1",{id:"Setup-functions",tabindex:"-1"},[a("Setup functions "),e("a",{class:"header-anchor",href:"#Setup-functions","aria-label":'Permalink to "Setup functions {#Setup-functions}"'},"​")],-1)),i[25]||(i[25]=e("h2",{id:"Cases-with-analytical-solutions",tabindex:"-1"},[a("Cases with analytical solutions "),e("a",{class:"header-anchor",href:"#Cases-with-analytical-solutions","aria-label":'Permalink to "Cases with analytical solutions {#Cases-with-analytical-solutions}"'},"​")],-1)),e("details",c,[e("summary",null,[i[0]||(i[0]=e("a",{id:"Fimbul.analytical_1d",href:"#Fimbul.analytical_1d"},[e("span",{class:"jlbinding"},"Fimbul.analytical_1d")],-1)),i[1]||(i[1]=a()),t(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[3]||(i[3]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">analytical_1d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keyword arguments</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Setup function for conductive heat transfer in 1D, with analytical solution</p><p><strong>Keyword arguments</strong></p><ul><li><p><code>L = 100.0</code>: Length of the domain (m)</p></li><li><p><code>thermal_conductivity = 2.0</code>: Thermal conductivity of the rock (W/(m K))</p></li><li><p><code>heat_capacity = 900.0</code>: Heat capacity of the rock (J/(kg K))</p></li><li><p><code>density = 2600</code>: Density of the rock (kg/m^3)</p></li><li><p><code>temperature_boundary = 283.15</code>: Temperature at the boundary (K)</p></li><li><p><code>initial_condition = missing</code>: Initial temperature profile. Set to sine curve if not provided</p></li><li><p><code>num_cells = 100</code>: Number of cells in the mesh</p></li><li><p><code>num_steps = 100</code>: Number of time steps</p></li></ul>',4)),t(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[2]||(i[2]=[e("a",{href:"https://github.com/sintefmath/Fimbul.jl/blob/ae880610abe7d585567064dc9cca82c7f87d21bd/src/cases/analytical.jl#L8-L23",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i[26]||(i[26]=e("h2",{id:"Generic-cases",tabindex:"-1"},[a("Generic cases "),e("a",{class:"header-anchor",href:"#Generic-cases","aria-label":'Permalink to "Generic cases {#Generic-cases}"'},"​")],-1)),e("details",k,[e("summary",null,[i[4]||(i[4]=e("a",{id:"Fimbul.egg_geothermal",href:"#Fimbul.egg_geothermal"},[e("span",{class:"jlbinding"},"Fimbul.egg_geothermal")],-1)),i[5]||(i[5]=a()),t(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[7]||(i[7]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">egg_geothermal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keyword arguments</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Keyword arguments</strong></p><ul><li><p><code>include_wells = true</code>: Include wells in the model.</p></li><li><p><code>wells_distance_ij = 20</code>: Distance (in cell numbers) between the wells in i and j directions.</p></li><li><p><code>simple_well = false</code>: Use simple well model instead of the full well model.</p></li><li><p><code>geothermal_gradient = 0.03si_unit(:Kelvin)/si_unit(:meter)</code>: Geothermal gradient in the reservoir.</p></li><li><p><code>pressure_top = 50si_unit(:bar)</code>: Pressure at the top of the reservoir.</p></li><li><p><code>temperature_top = convert_to_si(50, :Celsius)</code>: Temperature at the top of the reservoir.</p></li><li><p><code>use_bc = true</code>: Use fixed Dirichlet pressure and temperature boundary conditions at the reservoir sides.</p></li></ul>',3)),t(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[6]||(i[6]=[e("a",{href:"https://github.com/sintefmath/Fimbul.jl/blob/ae880610abe7d585567064dc9cca82c7f87d21bd/src/cases/egg_geothermal.jl#L1-L18",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i[27]||(i[27]=e("h2",{id:"Geothermal-energy-production",tabindex:"-1"},[a("Geothermal energy production "),e("a",{class:"header-anchor",href:"#Geothermal-energy-production","aria-label":'Permalink to "Geothermal energy production {#Geothermal-energy-production}"'},"​")],-1)),e("details",u,[e("summary",null,[i[8]||(i[8]=e("a",{id:"Fimbul.egg_geothermal_doublet",href:"#Fimbul.egg_geothermal_doublet"},[e("span",{class:"jlbinding"},"Fimbul.egg_geothermal_doublet")],-1)),i[9]||(i[9]=a()),t(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[11]||(i[11]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">egg_geothermal_doublet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keyword arguments</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Keyword arguments</strong></p><ul><li><p><code>rate_injection = 10si_unit(:litre)/si_unit(:second)</code>: Injection rate.</p></li><li><p><code>rate_production = rate_injection</code>: Production rate.</p></li><li><p><code>temperature_injection = convert_to_si(10.0, :Celsius)</code>: Injection temperature.</p></li><li><p><code>rate_observation = missing</code>: Observation well rate. Set to min(rate_injection, rate_production)/1000 if missing.</p></li><li><p><code>bhp = 45*si_unit(:bar)</code>: Bottom hole pressure of supporting well if BCs are not given (default - set use_bc = true to force BCs).</p></li><li><p><code>report_interval = si_unit(:year)/4</code>: Report interval for simulation results.</p></li><li><p><code>production_time = 25.0si_unit(:year)</code>: Production time.</p></li><li><p><code>well_distance_ij = 30</code>: Distance between the wells in i and j directions.</p></li><li><p>All other keyword arguments are passed to <code>egg_geothermal</code>.</p></li></ul>',3)),t(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[10]||(i[10]=[e("a",{href:"https://github.com/sintefmath/Fimbul.jl/blob/ae880610abe7d585567064dc9cca82c7f87d21bd/src/cases/egg_geothermal.jl#L97-L113",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e("details",g,[e("summary",null,[i[12]||(i[12]=e("a",{id:"Fimbul.geothermal_doublet",href:"#Fimbul.geothermal_doublet"},[e("span",{class:"jlbinding"},"Fimbul.geothermal_doublet")],-1)),i[13]||(i[13]=a()),t(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[15]||(i[15]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">geothermal_doublet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keyword arguments</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generic setup function for geothermal doublet case</p><p><strong>Keyword arguments</strong></p><ul><li><p><code>depths = [0.0, 500.0, 2400.0, 2500.0, 3000.0]</code>: Depths delineating geological layers.</p></li><li><p><code>permeability = [1e-3, 5e-2, 1.0, 1e-3]*darcy</code>: Permeability of the layers.</p></li><li><p><code>porosity = [0.01, 0.2, 0.35, 0.01]</code>: Porosity of the layers.</p></li><li><p><code>density = [2000, 2580, 2600, 2400]*kilogram/meter^3</code>: Rock density in the layers.</p></li><li><p><code>thermal_conductivity = [2.0, 2.8, 3.5, 1.9]*watt/meter/Kelvin</code>: Thermal conductivity in the layers.</p></li><li><p><code>heat_capacity = [1500, 900, 900, 1500]*joule/kilogram/Kelvin</code>: Heat capacity in the layers.</p></li><li><p><code>aquifer_layer = 3</code>: Index of the aquifer layer.</p></li><li><p><code>spacing_top = 100.0</code>: Horizontal well spacing at the surface</p></li><li><p><code>spacing_bottom = 1000.0</code>: Horizontal well spacing in the aquifer</p></li><li><p><code>depth_1 = 800.0</code>: Depth at which well starts to deviate.</p></li><li><p><code>depth_2 = 2500.0</code>: Depth of wells</p></li><li><p><code>temperature_inj = convert_to_si(20.0, :Celsius)</code>: Injection temperature.</p></li><li><p><code>rate = 300meter^3/hour</code>: Injection and production rate.</p></li><li><p><code>temperature_surface = convert_to_si(10.0, :Celsius)</code>: Temperature at the surface.</p></li><li><p><code>num_years = 200</code>: Number of years to run the simulation.</p></li><li><p><code>report_interval = si_unit(:year)</code>: Reporting interval for the simulation.</p></li></ul>',4)),t(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[14]||(i[14]=[e("a",{href:"https://github.com/sintefmath/Fimbul.jl/blob/ae880610abe7d585567064dc9cca82c7f87d21bd/src/cases/doublet.jl#L5-L29",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i[28]||(i[28]=e("h2",{id:"Underground-thermal-energy-storage",tabindex:"-1"},[a("Underground thermal energy storage "),e("a",{class:"header-anchor",href:"#Underground-thermal-energy-storage","aria-label":'Permalink to "Underground thermal energy storage {#Underground-thermal-energy-storage}"'},"​")],-1)),e("details",E,[e("summary",null,[i[16]||(i[16]=e("a",{id:"Fimbul.egg_ates",href:"#Fimbul.egg_ates"},[e("span",{class:"jlbinding"},"Fimbul.egg_ates")],-1)),i[17]||(i[17]=a()),t(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[19]||(i[19]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">egg_ates</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">temperature_charge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> convert_to_si</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:Celsius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">temperature_discharge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> convert_to_si</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:Celsius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rate_charge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25si_unit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:litre</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">si_unit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:second</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rate_discharge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rate_charge,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rate_observation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bhp_charge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25.0si_unit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:bar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bhp_discharge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 45.0si_unit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:bar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">charge_months </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;June&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;July&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;August&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;September&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">discharge_months </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;December&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;January&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;February&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;March&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">report_interval </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> si_unit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:year</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">num_years </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Keyword arguments</strong></p><ul><li><p><code>temperature_charge = convert_to_si(90.0, :Celsius)</code>: Charge temperature.</p></li><li><p><code>temperature_discharge = convert_to_si(10.0, :Celsius)</code>: Discharge temperature.</p></li><li><p><code>rate_charge = 25si_unit(:litre)/si_unit(:second)</code>: Charge rate.</p></li><li><p><code>rate_discharge = rate_charge</code>: Discharge rate.</p></li><li><p><code>rate_observation = missing</code>: Observation well rate. Set to min(rate_charge, rate_discharge)/1000 if missing.</p></li><li><p><code>bhp_charge = 25.0si_unit(:bar)</code>: Bottom hole pressure of supporting well during charge if BCs are not given (not default - set use_bc = false to force no BCs).</p></li><li><p><code>bhp_discharge = 45.0si_unit(:bar)</code>: Bottom hole pressure of supporting well during discharge if BCs are not given (not default - set use_bc = false to force no BCs).</p></li><li><p><code>charge_period = [&quot;June&quot;, &quot;September&quot;]</code>: Charge period.</p></li><li><p><code>discharge_period = [&quot;December&quot;, &quot;March&quot;]</code>: Discharge period.</p></li><li><p><code>num_years = 5</code>: Number of years to simulate.</p></li><li><p><code>report_interval = si_unit(:year)/12</code>: Report interval for simulation results.</p></li><li><p><code>utes_schedule_args = NamedTuple()</code>: Additional arguments passed to <code>make_utes_schedule()</code>.</p></li><li><p>All other keyword arguments are passed to <code>egg_geothermal</code>.</p></li></ul>`,3)),t(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[18]||(i[18]=[e("a",{href:"https://github.com/sintefmath/Fimbul.jl/blob/ae880610abe7d585567064dc9cca82c7f87d21bd/src/cases/egg_geothermal.jl#L175-L212",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e("details",y,[e("summary",null,[i[20]||(i[20]=e("a",{id:"Fimbul.btes",href:"#Fimbul.btes"},[e("span",{class:"jlbinding"},"Fimbul.btes")],-1)),i[21]||(i[21]=a()),t(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[23]||(i[23]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">btes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keyword arguments</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Setup function for borehole thermal energy storage (BTES) system.</p><p><strong>Keyword arguments</strong></p><ul><li><p><code>num_wells = 48</code>: Number of wells in the BTES system.</p></li><li><p><code>num_sections = 6</code>: Number of sections in the BTES system. The system is divided into equal circle sectors, and all wells in each sector are coupled in series.</p></li><li><p><code>well_spacing = 5.0</code>: Horizontal spacing between wells in meters.</p></li><li><p><code>depths = [0.0, 0.5, 50, 65]</code>: Depths delineating geological layers in meters.</p></li><li><p><code>well_layers = [1, 2]</code>: Layers in which the wells are placed</p></li><li><p><code>density = [30, 2580, 2580]*kilogram/meter^3</code>: Rock density in the layers.</p></li><li><p><code>thermal_conductivity = [0.034, 3.7, 3.7]*watt/meter/Kelvin</code>: Thermal conductivity in the layers.</p></li><li><p><code>heat_capacity = [1500, 900, 900]*joule/kilogram/Kelvin</code>: Heat capacity in the layers.</p></li><li><p><code>geothermal_gradient = 0.03Kelvin/meter</code>: Geothermal gradient.</p></li><li><p><code>temperature_charge = to_kelvin(90.0)</code>: Injection temperature during charging.</p></li><li><p><code>temperature_discharge = to_kelvin(10.0)</code>: Injection temperature during discharging.</p></li><li><p><code>rate_charge = 0.5litre/second</code>: Injection rate during charging.</p></li><li><p><code>rate_discharge = rate_charge</code>: Injection rate during discharging.</p></li><li><p><code>temperature_surface = to_kelvin(10.0)</code>: Temperature at the surface.</p></li><li><p><code>num_years = 5</code>: Number of years to run the simulation.</p></li><li><p><code>charge_period = [&quot;June&quot;, &quot;September&quot;]</code>: Period during which the system is charged.</p></li><li><p><code>discharge_period = [&quot;December&quot;, &quot;March&quot;]</code>: Period during which the system is discharged.</p></li><li><p><code>report_interval = 14day</code>: Reporting interval for the simulation.</p></li><li><p><code>utes_schedule_args = NamedTuple()</code>: Additional arguments for the UTES schedule.</p></li><li><p><code>n_z = [3, 8, 3]</code>: Number of layers in the vertical direction for each layer.</p></li><li><p><code>n_xy = 3</code>: Number of layers in the horizontal direction for each layer.</p></li><li><p><code>mesh_args = NamedTuple()</code>: Additional arguments for the mesh generation.</p></li></ul>',4)),t(s,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[22]||(i[22]=[e("a",{href:"https://github.com/sintefmath/Fimbul.jl/blob/ae880610abe7d585567064dc9cca82c7f87d21bd/src/cases/btes.jl#L8-L43",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const T=r(h,[["render",m]]);export{j as __pageData,T as default};
